// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "User.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - UserRoot

@implementation UserRoot

@end

#pragma mark - UserRoot_FileDescriptor

static GPBFileDescriptor *UserRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - UserInfo

@implementation UserInfo

@dynamic name;
@dynamic uid;
@dynamic email;
@dynamic phoneArray, phoneArray_Count;

typedef struct UserInfo__storage_ {
  uint32_t _has_storage_[1];
  int32_t uid;
  NSString *name;
  NSString *email;
  NSMutableArray *phoneArray;
} UserInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .number = UserInfo_FieldNumber_Name,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserInfo__storage_, name),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "uid",
        .number = UserInfo_FieldNumber_Uid,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
        .offset = offsetof(UserInfo__storage_, uid),
        .defaultValue.valueInt32 = 0,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "email",
        .number = UserInfo_FieldNumber_Email,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserInfo__storage_, email),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "phoneArray",
        .number = UserInfo_FieldNumber_PhoneArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(UserInfo__storage_, phoneArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(UserInfo_PhoneNumber),
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = UserInfo_PhoneType_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserInfo class]
                                     rootClass:[UserRoot class]
                                          file:UserRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserInfo__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum UserInfo_PhoneType

GPBEnumDescriptor *UserInfo_PhoneType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Mobile", .number = UserInfo_PhoneType_Mobile },
      { .name = "Home", .number = UserInfo_PhoneType_Home },
      { .name = "Work", .number = UserInfo_PhoneType_Work },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UserInfo_PhoneType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:UserInfo_PhoneType_IsValidValue];
  }
  return descriptor;
}

BOOL UserInfo_PhoneType_IsValidValue(int32_t value__) {
  switch (value__) {
    case UserInfo_PhoneType_Mobile:
    case UserInfo_PhoneType_Home:
    case UserInfo_PhoneType_Work:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UserInfo_PhoneNumber

@implementation UserInfo_PhoneNumber

@dynamic number;
@dynamic type;

typedef struct UserInfo_PhoneNumber__storage_ {
  uint32_t _has_storage_[1];
  UserInfo_PhoneType type;
  NSString *number;
} UserInfo_PhoneNumber__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "number",
        .number = UserInfo_PhoneNumber_FieldNumber_Number,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserInfo_PhoneNumber__storage_, number),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = UserInfo_PhoneNumber_FieldNumber_Type,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(UserInfo_PhoneNumber__storage_, type),
        .defaultValue.valueEnum = UserInfo_PhoneType_Mobile,
        .dataTypeSpecific.enumDescFunc = UserInfo_PhoneType_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserInfo_PhoneNumber class]
                                     rootClass:[UserRoot class]
                                          file:UserRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserInfo_PhoneNumber__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UserInfo_PhoneNumber_Type_RawValue(UserInfo_PhoneNumber *message) {
  GPBDescriptor *descriptor = [UserInfo_PhoneNumber descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserInfo_PhoneNumber_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetUserInfo_PhoneNumber_Type_RawValue(UserInfo_PhoneNumber *message, int32_t value) {
  GPBDescriptor *descriptor = [UserInfo_PhoneNumber descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserInfo_PhoneNumber_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


// @@protoc_insertion_point(global_scope)
